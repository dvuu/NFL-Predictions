var Game = require('./gameObj.js')
module.exports.Play = function (play, prevPlay, curIdx) {
	this.idx = curIdx;
	this.playId = play.pid;
	this.offense = play.off;
	this.defense = play.def;
	this.type = play.type;
	this.driveSequence = play.dseq;
	this.length = play.len;
	this.quarter = play.qtr;
	this.minute = play.MIN;
	this.seconds = play.sec;
	this.ptsOffense = play.ptso;
	this.ptsDefense = play.ptsd;
	this.timeoutsOffense = play.TIMO;
	this.timeoutsDefense = play.TIMD;
	this.down = play.Down;
	this.yardsToGoForFirstDown = play.YTG;
	this.offYardline = play.Yardline;
	this.fieldZone = play.zone;
	this.firstDown = play.fd;
	this.shotGun = play.sg;
	this.noHuddle = play.nh;
	this.pointsScored = play.pts;
	this.tackle = play.tck;
	this.sack = play.sk;
	this.penalty = play.pen;
	this.interception = play.ints;
	this.fumble = play.fum;
	this.safety = play.saf;
	this.block = play.blk;
	this.offensiveLineI = play.olid;
	this.winner = play.Winner;
	this.totalPtsScr = play.TOTp;
	this.scoreDiff = play.Score;
	this.AdjustedScore = play.AdjustedScore;
	this.vegasSpread = play.Spread;
	this.actualGameOutcome = play.Result;
	this.inOvertime = play.InOT;
	this.time = fixSecondsForOvertime(inOvertime, seconds);
	this.visitorWp = play.VisitorWP;
	this.homeWp = (1 - visitorWp);
	this.ptsHome = (findHomeScoreGained(v, offense, defense, ptsOffense, ptsDefense));
	this.ptsVisitor = (findVisitorScoreGained(v, offense, ptsOffense, ptsDefense));
}